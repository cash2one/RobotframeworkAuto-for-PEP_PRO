*** Settings ***
Library           Selenium2Library
Library           DateTime
Library           PepExt.py
Library           re
Library           Collections

*** Variables ***
${PEP_URL}        http://inworktest.yunfangdata.com:82/    # 评E评URL地址
${USER_NAME}      李楠    # 全局用户名
${PASSWORD}       123456    # 登录密码

*** Keywords ***
登录
    打开网页
    Input Text    xpath=//*[@id="username"]    ${USER_NAME}
    Input Text    xpath=//*[@id="password"]    ${PASSWORD}
    click Button    xpath=//button[contains(.,'登录')]
    Wait Until Page Contains    修改密码
    ${用户名}    get text    xpath=.//i[contains(@class,'user-name')]/..
    should Be Equal    ${用户名}    ${USER_NAME}

打开网页
    Open Browser    ${PEP_URL}    chrome
    Maximize Browser Window

等待加载完毕
    Set Selenium Speed    0.5s
    Wait Until Page Contains Element    xpath=//*[@id="LoadingBG" and @style="display: none;"]    timeout=30s
    Wait Until Page Contains Element    xpath=//*[@id="load_Tips" and contains(@style,"display: none")]    timeout=30s

等待列表创建完毕
    Wait Until Page Does Not Contain Element    xpath=//*[@class="datagrid-mask" and contains(@style,"display:block")]    timeout=30s

等待提示框出现
    Wait Until Page Contains Element    xpath=.//div[contains(@class,"messager-window") and contains(@style,"display: block")]    60s

等待弹出窗口出现
    Wait Until Page Contains Element    xpath=//*[contains(@id,'xubox_iframe')]    60s
    select Frame    xpath=//iframe[contains(@id,"xubox_iframe")]

打开功能模块
    [Arguments]    ${主模块}    ${子模块}
    Set Selenium Speed    0.5s
    ${count}    Get Matching Xpath Count    //span[contains(.,'${主模块}')]/../span[@class="arrow down"]
    Run Keyword If    '${count}'=='1'    Click Element    xpath=//span[contains(.,'${主模块}')]
    Wait Until Page Does Not Contain Element    xpath=.//ul[@class="menu" and @style="display: none;"]//a[text()="${子模块}"]    timeout=10s
    Click Element    //a[contains(.,'${子模块}')]

关闭功能模块
    [Arguments]    ${模块名称}
    Click Element    xpath=.//*[@id='framecenter']/div[@class="l-tab-links"]//a[text()="${模块名称}"]/../div[@class="l-tab-links-item-close"]

文本框清空并输入
    [Arguments]    ${locator}    ${text}
    Clear Element Text    xpath=${locator}
    Input Text    xpath=${locator}    ${text}

点击提示框中的${button_name}按钮
    Click Element    xpath=//div[contains(@class,"messager-window")]//span[text()="${button_name}"]/ancestor::a

获取当前时间
    [Arguments]    ${format}=%Y%m%d%H%M%S%f
    [Documentation]    根据输入的格式返回指定格式的时间，默认格式为%Y%m%d%H%M%S%f
    ${time}    Get Current Date    result_format=${format}
    [Return]    ${time}

切换到${sub_model_name}子模块
    Click Element    xpath=.//span[text()="${sub_model_name}"]/ancestor::a

页数
    [Arguments]    ${总共多少条[0]}    ${列表数目显示模式}
    ${页数}    Evaluate    ${总共多少条[0]}/${列表数目显示模式}

点击查询按钮
    [Arguments]    ${is_panel}=1    #是否是tab下的查询按钮
    [Documentation]    点击查询按钮操作，用于带有tab的模块（可能会存在多个查询按钮的情况），
    ...    如内业分配、外业分配，该方法只点击当前可以看见的查询按钮
    ...
    ...    如果参数is_panle不为1时，可以应用在一个页面没有多个查询按钮的情况。
    Run Keyword If    ${is_panel}==1    Click Element    xpath=.//div[@class="panel" and contains(@style,"display: block")]//span[text()="查询"]/ancestor::a
    ...    ELSE    Click Element    xpath=.//span[text()="查询"]/ancestor::a
    等待列表创建完毕

点击列表中的${buttun_name}按钮
    ${is_panel}    Get Matching Xpath Count    .//div[@class="panel" and contains(@style,"display: block")]//tr[@datagrid-row-index="0"]//a[text()="${buttun_name}"]
    Run Keyword If    ${is_panel} != 0    Click Element    xpath=.//div[@class="panel" and contains(@style,"display: block")]//tr[@datagrid-row-index="0"]//a[text()="${buttun_name}"]
    ...    ELSE    Click Element    xpath=.//tr[@datagrid-row-index="0"]//a[text()="${buttun_name}"]

初始化一个pep对象
    [Arguments]    ${dict}
    ${pep}    Create Pep Object    #创建一个pep对象
    ${keys}    Get Dictionary Keys    ${dict}    #获取所有key
    ${values}    Get Dictionary Values    ${dict}    #获取所有value
    @{user_list}    Create List    收费责任人    市场负责人    内部报单人    查勘人员    查勘人员
    : FOR    ${key}    ${value}    IN ZIP    ${keys}    ${values}
    \    ${count}    Get Match Count    ${user_list}    ${key}
    \    ${value}    Set Variable if    ${count}!=0    ${USER_NAME}    ${value}
    \    Set Pep Value    ${pep}    ${key}    ${value}
    [Return]    ${pep}

往输入框输入特殊字符并验证它是否出现警告
    [Arguments]    ${input_xpath}    ${match_xpath}    ${error_msg}=None    #传入输入框的xpath路径和警告的输入框样式
    Input Text    xpath=${input_xpath}    @!#
    ${count}    Get Matching Xpath Count    ${match_xpath}
    Run Keyword And Continue On Failure    Should Be Equal    ${count}    1    ${error_msg}

验证xpath路径匹配的数量
    [Arguments]    ${xpath}    ${match_count}    ${msg}=该xpath的路径匹配的数量不一致
    ${count}    Get Matching Xpath Count    ${xpath}
    Run Keyword And Continue On Failure    Should Be Equal    ${count}    ${match_count}    msg=${msg}

关闭浏览器_TestTeardown
    [Documentation]    当测试失败时，进行截图并关闭浏览器，该关键字只能用于Test Teardown，用到其他地方会报异常
    Run Keyword If Test Failed    Capture Page Screenshot
    Close Browser
